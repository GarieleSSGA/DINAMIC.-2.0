import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: #6e0707;
    overflow-x: clip;
}

ul {
    list-style: none;
}

.tabs {
    width: 80%;
    height: 100px;
    margin: auto;
    margin-top: 50px;
    display: flex;
    align-items: center;
    box-shadow: 10px 10px 19px #eac490, -10px -10px 19px #f3e8a0;
    overflow: hidden;
    border-radius: 10px;
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    -ms-border-radius: 10px;
    -o-border-radius: 10px;
}

.tabs li {
    background-color: #e76d08;
    width: 12.5%; /* Ajustado para acomodar 8 pestaÃ±as */
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #c4cfde;
    font-family: 'Poppins', sans-serif;
    transition: .5s;
    -webkit-transition: .5s;
    -moz-transition: .5s;
    -ms-transition: .5s;
    -o-transition: .5s;
    cursor: pointer;
}

.tabs li:hover {
    background: linear-gradient(145deg, #b82d0a, #23272b);
    box-shadow: 10px 10px 19px #1c1e22, -10px -10px 19px #262a2e;
    color: #ffffff;
    position: relative;
    z-index: 1;
    border-radius: 10px;
}

.active {
    background: linear-gradient(145deg, #1e2024, #23272b);
    box-shadow: 10px 10px 19px #1c1e22, -10px -10px 19px #c01111;
    color: #f9004d !important;
    position: relative;
    z-index: 1;
    border-radius: 10px;
}

.contents {
    width: 80%;
    margin: auto;
    margin-top: 50px;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 30px;
}

.box {
    gap: 20px;
    background: linear-gradient(145deg, #1e2024, #23272b);
    box-shadow: 10px 10px 19px #1c1e22, -10px -10px 19px #262a2e;
    border-radius: 10px;
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    -ms-border-radius: 10px;
    -o-border-radius: 10px;
    padding: 20px;
    width: 100%;
    animation: moving 1s ease;
    -webkit-animation: moving 1s ease;
}

.box img {
    width: 50%;
    border-radius: 10px;
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    -ms-border-radius: 10px;
    -o-border-radius: 10px;
}

.box h3 {
    color: #c4cfde;
    font-family: 'Poppins', sans-serif;
    font-size: 2rem;
    margin-bottom: 20px;
}

.box p {
    color: #c4cfde;
    opacity: .5;
    font-family: 'Poppins', sans-serif;
    font-size: 1rem;
}

.show {
    display: flex;
}

.hide {
    display: none;
}

@keyframes moving {
    from {
        transform: translateX(-50px);
        -webkit-transform: translateX(-50px);
        -moz-transform: translateX(-50px);
        -ms-transform: translateX(-50px);
        -o-transform: translateX(-50px);
        opacity: 0;
    }

    to {
        transform: translateX(0px);
        -webkit-transform: translateX(0px);
        -moz-transform: translateX(0px);
        -ms-transform: translateX(0px);
        -o-transform: translateX(0px);
        opacity: 1;
    }
}

@font-face {
  font-family: "Geist Mono";
  src: url(https://assets.codepen.io/605876/GeistMonoVariableVF.ttf);
}

*,
*::before,
*::after {
    transform-style: preserve-3d;
}

body {
  min-height: 100vh;
  display: grid;
  place-items: center;
  font-family: "Geist Mono", monospace;
  background: hsl(0 0% 2%);
  color-scheme: dark only;
}

body::before {
    --line: hsl(0 0% 95% / 0.15);
    --size: 60px;
    content: "";
    height: 100vh;
    width: 100vw;
    position: fixed;
    background:
        linear-gradient(90deg, var(--line) 1px, transparent 1px var(--size)) 50% 50% / var(--size) var(--size),
        linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% / var(--size) var(--size);
    mask: linear-gradient(-15deg, transparent 30%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
}

button {
  font-family: "Geist Mono", monospace;
  text-transform: uppercase;
  color: canvasText;
  padding: 1rem 2rem;
  border: 0;
  background: transparent;
  cursor: pointer;
  position: relative;
  transform-style: preserve-3d;
}

button::after {
  content: ""; 
  position: absolute;
  inset: 0;
  background: hsl(0 0% 100%);
  opacity: calc(var(--intent, 0) * 0.0875);
  transition: opacity 0.2s;
}

button:is(:hover, :focus-visible) {
  --intent: 1;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

button > span:not(.sr-only) {
  position: relative;
  color: transparent;
}

button > span:not(.sr-only)::after {
  content: attr(data-char);
  position: absolute;
  display: inline-block;
  inset: 0;
  color: canvasText;
}

button:is(:hover, :focus-visible) > span:not(.sr-only)::after {
  animation: flash calc(var(--speed, 0.25) * 1s) calc(var(--index, 0) * 0.05s) steps(1, end);
}

@keyframes flash {
  0%, 20%   { content: '_'; }
  40%  { content: var(--char-1); }
  60%  { content: var(--char-2); }
  80%  { content: var(--char-3); }
}

[data-explode=true] button:is(:hover, :focus-visible) {
    --intent: 0;
}

[data-explode=true]:has(button:is(:hover, :focus-visible)) .dummy {
    --intent: 1;
}

[data-explode=true] #app {
    transform: translate3d(0, 0, 100vmin) rotateX(-24deg) rotateY(40deg);
}

[data-explode=true] button {
    scale: 2.4;
}

button:not(.dummy)::before {
    content: ".char ::after";
    position: absolute;
    left: 100%;
    white-space: nowrap;
    translate: 0 -50%;
    transform-origin: 0 50%;
    scale: 0.5;
    top: 50%;
    text-transform: none;
    pointer-events: none;
    opacity: 0;
}

[data-explode=true] #app {
    transition: transform 0.5s 1s;
}

[data-explode=true] button {
    transform: translate3d(0, 0, 50px);
    transition: transform 0.5s 2s, scale 0.5s 0s;
}

[data-explode=true] .dummy {
    opacity: 1;
    transform: translate3d(0, 0, -50px);
    transition: transform 0.5s 2s, scale 0.5s 0s, opacity 0s 0s;
}
